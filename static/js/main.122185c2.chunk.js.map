{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Signin/Signin.js","App.js","serviceWorker.js","index.js","components/Logo/facelogo.jpg"],"names":["Navigation","onRouteChange","isSignedIn","console","log","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","facelogo","Register","id","htmlFor","type","name","value","FaceRecognition","imageUrl","box","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onSubmit","onChange","Rank","Signin","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculatefacelocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"8TA4BeA,EAxBI,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,WAE5B,OAAGA,GACEC,QAAQC,IAAIF,GAET,yBAAKG,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC1C,uBAAGC,QAAS,kBAAKP,EAAc,WAAWQ,UAAU,2CAApD,eAIRN,QAAQC,IAAIF,GAER,yBAAKG,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC9C,uBAAGC,QAAS,kBAAKP,EAAc,WAAWQ,UAAU,2CAApD,WACA,uBAAGD,QAAS,kBAAKP,EAAc,aAAaQ,UAAU,2CAAtD,e,2CCDDC,EAbJ,WACP,OACI,yBAAKD,UAAU,aACX,kBAAC,IAAD,CAAMA,UAAU,2BAA2BE,QAAS,CAAEC,IAAM,IAAMP,MAAO,CAAEQ,OAAQ,IAAKC,MAAO,MAC3F,yBAAKL,UAAU,kBACX,yBAAKJ,MAAO,CAACU,WAAY,OAAQC,IAAI,OAAOC,IAAKC,MADrD,QC+BDC,EArCC,SAAC,GAAoB,IAAnBlB,EAAkB,EAAlBA,cACd,OACI,6BAASQ,UAAU,iEACnB,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,YACX,8BAAUW,GAAG,UAAUX,UAAU,6BACjC,4BAAQA,UAAU,wBAAlB,YACA,yBAAKA,UAAU,QACX,2BAAOA,UAAU,0BAA0BY,QAAQ,QAAnD,QACA,2BAAOZ,UAAU,2EAA2Ea,KAAK,OAAOC,KAAK,OAAQH,GAAG,UAE5H,yBAAKX,UAAU,QACX,2BAAOA,UAAU,0BAA0BY,QAAQ,QAAnD,SACA,2BAAOZ,UAAU,2EAA2Ea,KAAK,QAAQC,KAAK,gBAAiBH,GAAG,mBAEtI,yBAAKX,UAAU,OACX,2BAAOA,UAAU,0BAA0BY,QAAQ,YAAnD,YACA,2BAAOZ,UAAU,6EAA6Ea,KAAK,WAAWC,KAAK,WAAYH,GAAG,eAI1I,yBAAKX,UAAU,IACrB,2BACAD,QAAS,kBAAIP,EAAc,SAC3BQ,UAAU,wEAAwEa,KAAK,SAASE,MAAM,iBCP7FC,G,OAhBQ,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,IAC/B,OACI,yBAAKlB,UAAU,UACX,yBAAKA,UAAU,gBACf,yBAAKW,GAAG,aAAaJ,IAAI,GAAGC,IAAKS,EAAWZ,MAAM,QAAQc,MAAM,SAChE,yBAAKnB,UAAU,eAAeJ,MAAO,CAACwB,IAAKF,EAAIG,OAAQC,MAAOJ,EAAIK,SAAUC,OAAQN,EAAIO,UAAWC,KAAMR,EAAIS,eCiB1GC,G,OArBO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SACpC,OACI,6BAEI,yBAAK9B,UAAU,UACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,qBAAqBa,KAAK,MAAMkB,SAAUF,IAC3D,4BACI7B,UAAU,gDACVD,QAAS+B,GAFb,eCMLE,EAdH,WACR,OACI,6BACI,yBAAKhC,UAAU,YACV,iCAEL,yBAAKA,UAAU,YACb,Q,iBC8BCiC,EArCD,SAAC,GAAoB,IAAnBzC,EAAkB,EAAlBA,cACZ,OACI,6BAASQ,UAAU,iEACnB,0BAAMA,UAAU,gBACZ,yBAAKA,UAAU,YACX,8BAAUW,GAAG,UAAUX,UAAU,6BACjC,4BAAQA,UAAU,yBAAlB,WACA,yBAAKA,UAAU,QACX,2BAAOA,UAAU,0BAA0BY,QAAQ,iBAAnD,SACA,2BAAOZ,UAAU,2EAA2Ea,KAAK,QAAQC,KAAK,gBAAiBH,GAAG,mBAEtI,yBAAKX,UAAU,OACX,2BAAOA,UAAU,2BAA2BY,QAAQ,YAApD,YACA,2BAAOZ,UAAU,6EAA6Ea,KAAK,WAAWC,KAAK,WAAYH,GAAG,eAI1I,yBAAKX,UAAU,IACrB,2BACAD,QAAS,kBAAKP,EAAc,SAC5BQ,UAAU,oEACVa,KAAK,SACLE,MAAM,aAER,yBAAKf,UAAU,uBACb,uBAAGD,QAAS,kBAAKP,EAAc,aAAaQ,UAAU,wBAAtD,iBCdAkC,G,OAAK,IAAIC,IAASC,IAAI,CAC1BC,OAAQ,sCAKJC,EAAiB,CACAC,UAAW,CACXC,OAAQ,CACNzB,MAAO,GACP0B,QAAS,CACPC,QAAQ,EACRC,WAAY,QAoGxBP,E,kDAzFb,aAAc,IAAD,8BACX,gBAWFQ,sBAAuB,SAACC,GACtB,IAAMC,EAAeD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aAC3DC,EAAOC,SAASC,eAAe,cAC/BhD,EAAOiD,OAAOH,EAAM9C,OACpBD,EAASkD,OAAOH,EAAM/C,QAC5B,MAAM,CACJuB,QAASmB,EAAaS,SAAWlD,EACjCgB,OAAQyB,EAAaU,QAASpD,EAC9BmB,SAAUlB,EAASyC,EAAaW,UAAUpD,EAC1CoB,UAAWrB,EAAU0C,EAAaY,WAAYtD,IArBrC,EA0BbuD,eAAgB,SAACzC,GACf,EAAK0C,SAAS,CAAC1C,IAAKA,KA3BT,EA+BbW,cAAgB,SAACgC,GACf,EAAKD,SAAS,CAACE,MAAOD,EAAME,OAAOhD,SAhCxB,EAmCbe,SAAU,WACR,EAAK8B,SAAS,CAAC3C,SAAU,EAAK+C,MAAMF,QACpC5B,EAAI+B,OACHC,QACC/B,IAASgC,kBACX,EAAKH,MAAMF,OACRM,MAAK,SAAAC,GAAQ,OAAI,EAAKV,eAAe,EAAKf,sBAAsByB,OAChEC,OAAM,SAAAC,GAAG,OAAI7E,QAAQC,IAAI4E,OA1CjB,EA6Cb/E,cAAe,SAACgF,GACA,SAAVA,EACF,EAAKZ,SAAS,CAACnE,YAAY,IACT,WAAT+E,GACT,EAAKZ,SAAS,CAACnE,YAAY,IAE7B,EAAKmE,SAAS,CAACY,MAAOA,KAjDtB,EAAKR,MAAQ,CACXF,MAAO,GACP7C,SAAU,GACVC,IAAK,GACLsD,MAAO,SACP/E,YAAY,GAPH,E,qDAsDJ,IAAD,EACuCgF,KAAKT,MAA1CvE,EADF,EACEA,WAAYwB,EADd,EACcA,SAAUuD,EADxB,EACwBA,MAAOtD,EAD/B,EAC+BA,IACrC,OACA,yBAAKlB,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,YACb0E,OAAQpC,IAGhB,kBAAC,EAAD,CAAY7C,WAAYA,EAAYD,cAAeiF,KAAKjF,gBAC7C,SAATgF,EACA,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CACE3C,cAAe4C,KAAK5C,cACpBC,SAAU2C,KAAK3C,WACjB,kBAAC,EAAD,CAAiBZ,IAAKA,EAAKD,SAAUA,KAI5B,WAATuD,EACE,kBAAC,EAAD,CAAQhF,cAAeiF,KAAKjF,gBAC7B,kBAAC,EAAD,CAAUA,cAAeiF,KAAKjF,qB,GA7EvBmF,aCxBEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/B,SAASC,eAAe,SDwHpB,kBAAmB+B,WACrBA,UAAUC,cAAcC,MACrBlB,MAAK,SAAAmB,GACJA,EAAaC,gBAEdlB,OAAM,SAAAmB,GACL/F,QAAQ+F,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.122185c2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) =>{\r\n    \r\n        if(isSignedIn){\r\n             console.log(isSignedIn)\r\n            return(\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={()=> onRouteChange('signin')} className='f3 link dim white underline pa3 pointer'>Sign Out</p>\r\n                </nav>\r\n            );\r\n        } else{\r\n            console.log(isSignedIn)\r\n            return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={()=> onRouteChange('signin')} className='f3 link dim white underline pa3 pointer'>Sign In</p>\r\n                <p onClick={()=> onRouteChange('register')} className='f3 link dim white underline pa3 pointer'>Register</p>\r\n                </nav>\r\n                \r\n                \r\n            );\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport facelogo from './facelogo.jpg'\r\nconst Logo=() => {\r\n    return(\r\n        <div className=' ma4 mt0 '>\r\n            <Tilt className=\"Tilt br2 shadow-2 center\" options={{ max : 55 }} style={{ height: 250, width: 250 }} >\r\n                <div className=\"Tilt-inner pa3\" > \r\n                    <img style={{paddingTop: '5px'}} alt='logo' src={facelogo}/> </div>\r\n            </Tilt> \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nconst Register =({onRouteChange}) =>{\r\n    return(\r\n        <article className='br3 pa2 ba  white mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\r\n        <main className=\"pa4 black-80\">\r\n            <div className=\"measure \">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"white f1 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3 \">\r\n                    <label className=\"white db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                    <input className=\"pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                </div>\r\n                <div className=\"mt3 \">\r\n                    <label className=\"white db fw6 lh-copy f6\" htmlFor=\"name\">email</label>\r\n                    <input className=\"pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"white db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                </div>\r\n                \r\n            </fieldset>\r\n            <div className=\"\">\r\n      <input \r\n      onClick={()=>onRouteChange('home')}\r\n      className=\"pa3 b ph3 pv2 input-reset ba white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n\r\n\r\n      </div>\r\n  </div>\r\n</main>\r\n</article>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Register;\r\n\r\n","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition =({imageUrl, box}) =>{\r\n    return(\r\n        <div className='center'>\r\n            <div className='absolute mt2'>\r\n            <img id='inputimage' alt='' src={imageUrl}  width='500px' heigh='auto'/>\r\n            <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n\r\n            </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\n\r\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\r\n    return(\r\n        <div>\r\n            \r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button \r\n                        className='w-30 grow f4 link ph3 pv2 dib white bg-purple'\r\n                        onClick={onSubmit}\r\n                         >Detect\r\n                    </button>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\n\r\nconst Rank =() =>{\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Erick your current rack is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n             {'#5'}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    }\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\n\r\nconst Signin =({onRouteChange}) =>{\r\n    return(\r\n        <article className='br3 pa2 ba  white mv4 w-100 w-50-m w-25-l mw6 shadow-5 center'>\r\n        <main className=\"pa4 black-80\">\r\n            <div className=\"measure \">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\" white f1 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3 \">\r\n                    <label className=\"white db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\" white db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 white input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                </div>\r\n                \r\n            </fieldset>\r\n            <div className=\"\">\r\n      <input \r\n      onClick={()=> onRouteChange('home')}\r\n      className=\"b ph3 pv2 input-reset ba white bg-transparent grow pointer f6 dib\" \r\n      type=\"submit\" \r\n      value=\"Sign in\"/>\r\n        </div>\r\n    <div className=\"lh-copy mt3 pointer\">\r\n      <p onClick={()=> onRouteChange('register')} className=\"f6 link dim white db\">Register</p>\r\n      \r\n    </div>\r\n  </div>\r\n</main>\r\n</article>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Signin;\r\n\r\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js'\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Clarifai from 'clarifai';\nimport Signin from './components/Signin/Signin';\nimport './App.css';\n\n\n\nconst app= new Clarifai.App({\n  apiKey: 'bc5fedde29944453aca2d55de481bd35'\n});\n\n\n\nconst particlesOptions={\n                       particles: {\n                       number: {\n                         value: 30,\n                         density: {\n                           enable: true,\n                           value_area: 800\n                         }\n                       }\n                       \n  }\n}\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},  \n      route: 'signin',\n      isSignedIn: false,\n    }\n  }\n\n\n  calculatefacelocation =(data)=>{\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image= document.getElementById('inputimage');\n    const width= Number(image.width);\n    const height = Number(image.height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row *height,\n      rightCol: width - (clarifaiFace.right_col*width),\n      bottomRow: height - (clarifaiFace.bottom_row* height)\n\n    }\n  }\n\n  displayFaceBox =(box) =>{\n    this.setState({box: box});\n  }\n\n\n  onInputChange = (event) => { \n    this.setState({input: event.target.value});\n  }\n\n  onSubmit =() =>{\n    this.setState({imageUrl: this.state.input})\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n      .then(response => this.displayFaceBox(this.calculatefacelocation(response)))  \n      .catch(err => console.log(err));\n  }\n\n  onRouteChange =(route) =>{\n    if (route === 'home'){\n      this.setState({isSignedIn: true})\n    } else if (route ==='signin'){\n      this.setState({isSignedIn: false})\n    }\n    this.setState({route: route})\n  }\n\n  render(){\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n    <div className=\"App\">\n      <Particles className='particles'\n              params={particlesOptions}              \n            />\n      \n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n      { route ==='home'\n      ? <div>\n          <Logo />\n          <Rank/>\n          <ImageLinkForm \n            onInputChange={this.onInputChange} \n            onSubmit={this.onSubmit}/>\n          <FaceRecognition box={box} imageUrl={imageUrl}/>\n          \n        </div>\n      :(\n          route ==='signin' \n          ? <Signin onRouteChange={this.onRouteChange}/>\n          :<Register onRouteChange={this.onRouteChange}/>\n        )\n\n        \n        \n\n    }\n      </div>\n  );\n    }\n    }\n  \n    \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/facelogo.e20302d3.jpg\";"],"sourceRoot":""}